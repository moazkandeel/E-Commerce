{"version":3,"file":"static/js/655.5a9128a6.chunk.js","mappings":"mMAKe,SAASA,IACtB,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,WAAS,GACnD,IACIC,EADAC,GAAWC,EAAAA,EAAAA,MAIbF,EAFCH,EAEUM,EAAAA,GAAW,CACpBC,MAAMD,EAAAA,KAAaC,MAAM,qBAAqBC,SAAS,uBAG9CF,EAAAA,GAAW,CACtBG,UAAUH,EAAAA,KAAaE,SAAS,yBAAyBE,QAAQ,aAAc,iCAGjF,IAAIC,EAAgBX,EAAe,CAACO,MAAM,IAAM,CAACE,UAAU,IACvDG,GAASC,EAAAA,EAAAA,IAAU,CACrBF,cAAcA,EACdG,iBAAiBX,EACjBY,SAAUC,KAQZC,eAAwBD,GACtBf,GAAiB,GACXiB,EAAAA,EAAMC,KAAK,+CAADC,OAAgDC,GAAYL,GAAQM,MAAMC,IAClE,YAArBA,EAAKA,KAAKC,QACXpB,EAAS,iBACX,IACEqB,OAAOC,OAGX,CAhBEC,CAASX,EAAO,IAKZK,EAAYrB,EAAe,kBAAoB,kBAarD,OACE4B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACAC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0DAAyDF,SAAA,EACtEF,EAAAA,EAAAA,KAAA,MAAII,UAAU,6BAA4BF,SAAC,qBAC7CF,EAAAA,EAAAA,KAAA,QAAMb,SAAUH,EAAOqB,aAAaH,UAGtCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,SACtB9B,GACD+B,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACAF,EAAAA,EAAAA,KAAA,SAAOM,KAAK,QAAQF,UAAU,eAAgBG,YAAY,0BAA2BC,MAAOxB,EAAOI,OAAOT,OAAS,GAAI8B,KAAK,QAAQC,SAAU1B,EAAO2B,aAAcC,OAAQ5B,EAAO6B,aACjL7B,EAAO8B,QAAQnC,OAASK,EAAO+B,OAAOpC,OAAQqB,EAAAA,EAAAA,KAAA,KAAGI,UAAU,cAAaF,SAAElB,EAAO+B,OAAOpC,QAAY,OAGrGwB,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACAF,EAAAA,EAAAA,KAAA,SAAOM,KAAK,OAAOF,UAAU,eAAeG,YAAY,4BAA4BC,MAAQxB,EAAOI,OAAOP,WAAa,GAAI4B,KAAK,YAAYC,SAAU1B,EAAO2B,aAAcC,OAAQ5B,EAAO6B,aACzL7B,EAAO8B,QAAQjC,WAAaG,EAAO+B,OAAOlC,WAAYmB,EAAAA,EAAAA,KAAA,KAAGI,UAAU,cAAaF,SAAElB,EAAO+B,OAAOlC,YAAgB,SAInHmB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,WAAUF,SACxB9B,GACD4B,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAASF,UAAU,8CAA8CY,WAAYhC,EAAOiC,SAAWjC,EAAOkC,OAAOhB,SAAC,UAE3HF,EAAAA,EAAAA,KAAA,UAAQM,KAAK,SAASF,UAAU,8CAA8CY,WAAYhC,EAAOiC,SAAWjC,EAAOkC,OAAOhB,SAAC,uBAU/H,C","sources":["Component/ForgetPassword/ForgetPassword.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nexport default function ForgotPassword() {\r\n  const [resetPassword, setResetPassword] = useState(true)\r\n  let navigate = useNavigate()\r\n  let mySchema;\r\n  if(resetPassword){\r\n\r\n    mySchema = Yup.object({\r\n      email:Yup.string().email(\"email isn't valid\").required('email is required')\r\n    })\r\n  }else{\r\n    mySchema = Yup.object({\r\n    resetCode:Yup.string().required('resetCode is required').matches(/^[0-9]{6}$/, 'resetCode must be 6 numbers')\r\n  })\r\n  }\r\n  let initialValues = resetPassword? {email:\"\"} : {resetCode:\"\"}\r\n  let formik = useFormik({\r\n    initialValues:initialValues,\r\n    validationSchema:mySchema,\r\n    onSubmit:(values)=>{\r\n    getEmail(values)\r\n    }\r\n    \r\n  })\r\n \r\n   let  endPoint =  resetPassword? \"forgotPasswords\" : \"verifyResetCode\"\r\n \r\n  async function getEmail(values){\r\n    setResetPassword(false)\r\n   return axios.post(`https://ecommerce.routemisr.com/api/v1/auth/${endPoint}`, values).then((data)=>{\r\n    if(data.data.status === \"Success\"){\r\n      navigate('/resetPassword')\r\n    }\r\n   }).catch((err)=>{\r\n\r\n   })\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <div className=\"container mx-auto forget-content bg-light-subtle shadow\">\r\n      <h1 className='text-center mb-5 fw-bolder'>Forgot Password</h1>\r\n    <form onSubmit={formik.handleSubmit}>\r\n      {/* {newPassword? '' :   */}\r\n     \r\n  <div className=\"mb-3 row\">\r\n    <div className=\"col-md-9\">\r\n      {resetPassword? \r\n      <>\r\n      <input type=\"email\" className=\"form-control\"  placeholder=\"Enter your email.......\"  value={formik.values.email || ''} name=\"email\" onChange={formik.handleChange} onBlur={formik.handleBlur}/>\r\n      {formik.touched.email && formik.errors.email ? <p className='text-danger'>{formik.errors.email}</p>: \"\"}\r\n      </>\r\n      : \r\n      <>\r\n      <input type=\"text\" className=\"form-control\" placeholder=\"Enter reset number.......\" value= {formik.values.resetCode || ''} name=\"resetCode\" onChange={formik.handleChange} onBlur={formik.handleBlur}/>\r\n      {formik.touched.resetCode && formik.errors.resetCode ? <p className='text-danger'>{formik.errors.resetCode}</p>: \"\"}\r\n      </>\r\n    }\r\n    </div>\r\n    <div className=\"col-md-3\">\r\n    {resetPassword? \r\n    <button type=\"submit\" className=\"btn bg-main fw-bolder text-light fs-5 w-100\" disabled={!(formik.isValid && formik.dirty)}>Next</button>\r\n    :\r\n    <button type=\"submit\" className=\"btn bg-main fw-bolder text-light fs-5 w-100\" disabled={!(formik.isValid && formik.dirty)}>confirm</button>\r\n\r\n}\r\n    </div>\r\n  </div>\r\n   {/* } */}\r\n</form>\r\n    </div>\r\n    </>\r\n  )\r\n}"],"names":["ForgotPassword","resetPassword","setResetPassword","useState","mySchema","navigate","useNavigate","Yup","email","required","resetCode","matches","initialValues","formik","useFormik","validationSchema","onSubmit","values","async","axios","post","concat","endPoint","then","data","status","catch","err","getEmail","_jsx","_Fragment","children","_jsxs","className","handleSubmit","type","placeholder","value","name","onChange","handleChange","onBlur","handleBlur","touched","errors","disabled","isValid","dirty"],"sourceRoot":""}