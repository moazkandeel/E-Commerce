{"version":3,"file":"static/js/671.66b69f2c.chunk.js","mappings":"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","sources":["Component/UpdataPassword/UpdataPassword.jsx"],"sourcesContent":["import React,{useState} from 'react'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { Triangle } from 'react-loader-spinner'\r\nimport axios from 'axios'\r\nimport toast from \"react-hot-toast\";\r\nexport default function UpdatePassword() {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  let mySchema = Yup.object({\r\n    currentPassword:Yup.string().required('password is required').matches(/^[A-Z][a-z0-9]{5,15}$/, 'password must start captial letter and least 6 char'),\r\n    password:Yup.string().required('password is required').matches(/^[A-Z][a-z0-9]{5,15}$/, 'password must start captial letter and least 6 char'),\r\n    rePassword:Yup.string().required('password is required').oneOf([Yup.ref('password')], 'password not match'),\r\n  })\r\n\r\nlet formik = useFormik({\r\n  initialValues:{\r\n    currentPassword:\"\",\r\n    password:\"\",\r\n    rePassword:\"\",\r\n  },\r\n  validationSchema:mySchema,\r\n  onSubmit:(values)=>{\r\n    setNewPassword(values)\r\n  }\r\n  \r\n})\r\n\r\nasync function setNewPassword(values){\r\n  setIsLoading(true)\r\n return axios.put(`https://ecommerce.routemisr.com/api/v1/users/changeMyPassword`, values, {\r\n    headers: {\r\n    token: localStorage.getItem('token')\r\n  }\r\n}).then((data)=>{\r\n  console.log(data)\r\n  if(data.data.message === \"success\"){\r\n    toast.success(data.data.message)\r\n    setIsLoading(false)\r\n  }\r\n }).catch((err)=>{\r\n   console.log(err)\r\n   toast.error(err.response.data.message)\r\n   setIsLoading(false)\r\n })\r\n}\r\n  return (\r\n    <>\r\n    {isLoading? <div className='loading d-flex align-items-center justify-content-center'>\r\n         <Triangle\r\n          visible={true}\r\n          height=\"80\"\r\n          width=\"80\"\r\n          color=\"var(--main-color)\"\r\n          ariaLabel=\"triangle-loading\"\r\n          wrapperStyle={{}}\r\n          wrapperClass=\"\"/> </div>: \r\n    <div className=\"container mx-auto forget-content bg-light-subtle shadow\">\r\n      <h1 className='text-center mb-5 fw-bolder'>Update Password</h1>\r\n    <form onSubmit={formik.handleSubmit}>\r\n  <div className=\"mb-3 row\">\r\n    <div className=\"col-md-12 my-3\">\r\n      <input type=\"password\" className=\"form-control\"  placeholder=\"Your currentPassword.......\"  value={formik.values.currentPassword} name=\"currentPassword\" onChange={formik.handleChange} onBlur={formik.handleBlur}/>\r\n      {formik.touched.currentPassword && formik.errors.currentPassword ? <p className='text-danger'>{formik.errors.currentPassword}</p>: \"\"}\r\n    </div>\r\n    <div className=\"col-md-12 my-3\">\r\n      <input type=\"password\" className=\"form-control\"  placeholder=\"Your new password.......\"  value={formik.values.password} name=\"password\" onChange={formik.handleChange} onBlur={formik.handleBlur}/>\r\n      {formik.touched.password && formik.errors.password ? <p className='text-danger'>{formik.errors.password}</p>: \"\"}\r\n    </div>\r\n    <div className=\"col-md-12 my-3\">\r\n      <input type=\"password\" className=\"form-control\"  placeholder=\"reNewPassword.......\"  value={formik.values.rePassword} name=\"rePassword\" onChange={formik.handleChange} onBlur={formik.handleBlur}/>\r\n      {formik.touched.rePassword && formik.errors.rePassword ? <p className='text-danger'>{formik.errors.rePassword}</p>: \"\"}\r\n    </div>\r\n    <div className=\"col-md-5 my-3\">\r\n    <button type=\"submit\" className=\"btn bg-main fw-bolder text-light fs-5 w-100\" disabled={!(formik.isValid && formik.dirty)}>Reset password</button>\r\n    </div>\r\n  </div>\r\n</form>\r\n    </div>\r\n}\r\n    </>\r\n  \r\n  )\r\n}"],"names":["UpdatePassword","isLoading","setIsLoading","useState","mySchema","Yup","currentPassword","required","matches","password","rePassword","oneOf","formik","useFormik","initialValues","validationSchema","onSubmit","values","async","axios","put","headers","token","localStorage","getItem","then","data","console","log","message","toast","success","catch","err","error","response","setNewPassword","_jsx","_Fragment","children","_jsxs","className","Triangle","visible","height","width","color","ariaLabel","wrapperStyle","wrapperClass","handleSubmit","type","placeholder","value","name","onChange","handleChange","onBlur","handleBlur","touched","errors","disabled","isValid","dirty"],"sourceRoot":""}